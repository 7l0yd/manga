security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Membre: bcrypt
    providers:
        in_memory: { memory: ~ }
        membre_provider:
            entity:
                class: App\Entity\Membre
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            form_login:

                #Route qui gère la connexion d'un membre
                login_path: membre_connexion
                check_path: membre_connexion

                #Champ email du formulaire
                username_parameter: form[email]

                #champ password du formulaire
                password_parameter: form[password]

                #Redirection apres la connexion
                default_target_path: /

            provider: membre_provider

            #La deconexion est gérépar Symfony
            logout:

                #L'URL de déconnexion
                path: /deconnexion

                #L'URL de redirection
                target: /
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_AUTEUR: ROLE_MEMBRE
        ROLE_ADMIN: ROLE_AUTEUR
